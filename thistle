#!/bin/bash
# chkconfig: 35 99 01
# description: a server monitoring app

export PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
if [ -f /etc/thistle/defaults ]; then
  source /etc/thistle/defaults
fi
THISTLE=`which thistle`
PID_FILE="/var/run/thistle.pid"
CONF_FILE="/etc/thistle/config.py"

which start-stop-daemon > /dev/null 2>&1
if [ $? -eq 0 ]; then
  daemonize () {
    /sbin/start-stop-daemon --start --oknodo --background --exec "${THISTLE}" -- -c ${CONF_FILE} start
  }
else
  daemonize () {
    nohup ${THISTLE} -c ${CONF_FILE} start 0<&- 1>/dev/null 2>&1 &
  }
fi

start_func(){
  if pid=`status_func` >/dev/null ;then
    echo "\`thistle' is already running: $pid"
    exit 1
  fi

  echo -n "Starting thistle: "
  daemonize
  sleep 3
  if [ `status_func` = "NG" ]; then
    echo "NG"
    exit $?
  else
    echo "OK"
    exit 0
  fi
}

stop_func(){
  if pid=`status_func` >/dev/null ;then
    echo -n "Stopping thistle: "
    ${THISTLE} ${ARGS} -c ${CONF_FILE} stop
    [ $? -ne 0 ] && echo NG || echo OK
    exit $?
  fi
  echo "Not runnning"
  exit 1
}

test_func(){
  ${THISTLE} ${ARGS} -c ${CONF_FILE} test
  exit $?
}

status_func(){
  if [ -s $PID_FILE ];then
    pid=`cat $PID_FILE`
    if [ -d /proc/$pid ];then
      echo "$pid"
      return 0
    fi
  fi
  echo "NG"
  return 1
}

CMD=$1
shift
ARGS="$*"
case "${CMD}" in
  start)
    start_func
    ;;
  stop)
    stop_func
    ;;
  test)
    test_func
    ;;
  status)
    status_func
    ;;
  *)
    echo "Usage: thistle [start|stop|test|status]"
    exit 1
esac
